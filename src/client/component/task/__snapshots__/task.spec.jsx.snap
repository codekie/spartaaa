// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly default 1`] = `
<Media
  className="cmp-task undefined"
  renderAs="article"
  style={Object {}}
>
  <div
    className="priority "
    onClick={[Function]}
  />
  <MediaItem
    className=""
    position="left"
    renderAs="figure"
    style={Object {}}
  >
    <div>
      <Icon
        align={null}
        className="is-medium fa-2x"
        color={null}
        icon={null}
        size={null}
        style={Object {}}
      >
        <FontAwesomeIcon
          border={false}
          className="task-icon"
          fixedWidth={false}
          flip={null}
          icon={null}
          inverse={false}
          listItem={false}
          mask={null}
          pull={null}
          pulse={false}
          rotation={null}
          size={null}
          spin={false}
          symbol={false}
          title=""
          transform={null}
        />
      </Icon>
    </div>
    <div>
      <Button
        className="btn-check"
        color={null}
        disabled={false}
        fullwidth={false}
        inverted={false}
        isSelected={false}
        isStatic={false}
        loading={false}
        onClick={[Function]}
        outlined={false}
        remove={false}
        renderAs="button"
        reset={false}
        rounded={false}
        size={null}
        state={null}
        style={Object {}}
        submit={false}
        text={false}
      >
        <Icon
          align={null}
          className=""
          color={null}
          icon={null}
          size={null}
          style={Object {}}
        >
          <FontAwesomeIcon
            border={false}
            className="check-icon"
            fixedWidth={false}
            flip={null}
            icon={
              Object {
                "icon": Array [
                  512,
                  512,
                  Array [],
                  "f11e",
                  "M466.515 66.928C487.731 57.074 512 72.551 512 95.944v243.1c0 10.526-5.161 20.407-13.843 26.358-35.837 24.564-74.335 40.858-122.505 40.858-67.373 0-111.63-34.783-165.217-34.783-50.853 0-86.124 10.058-114.435 22.122V488c0 13.255-10.745 24-24 24H56c-13.255 0-24-10.745-24-24V101.945C17.497 91.825 8 75.026 8 56 8 24.296 34.345-1.254 66.338.048c28.468 1.158 51.779 23.968 53.551 52.404.52 8.342-.81 16.31-3.586 23.562C137.039 68.384 159.393 64 184.348 64c67.373 0 111.63 34.783 165.217 34.783 40.496 0 82.612-15.906 116.95-31.855zM96 134.63v70.49c29-10.67 51.18-17.83 73.6-20.91v-71.57c-23.5 2.17-40.44 9.79-73.6 21.99zm220.8 9.19c-26.417-4.672-49.886-13.979-73.6-21.34v67.42c24.175 6.706 47.566 16.444 73.6 22.31v-68.39zm-147.2 40.39v70.04c32.796-2.978 53.91-.635 73.6 3.8V189.9c-25.247-7.035-46.581-9.423-73.6-5.69zm73.6 142.23c26.338 4.652 49.732 13.927 73.6 21.34v-67.41c-24.277-6.746-47.54-16.45-73.6-22.32v68.39zM96 342.1c23.62-8.39 47.79-13.84 73.6-16.56v-71.29c-26.11 2.35-47.36 8.04-73.6 17.36v70.49zm368-221.6c-21.3 8.85-46.59 17.64-73.6 22.47v71.91c27.31-4.36 50.03-14.1 73.6-23.89V120.5zm0 209.96v-70.49c-22.19 14.2-48.78 22.61-73.6 26.02v71.58c25.07-2.38 48.49-11.04 73.6-27.11zM316.8 212.21v68.16c25.664 7.134 46.616 9.342 73.6 5.62v-71.11c-25.999 4.187-49.943 2.676-73.6-2.67z",
                ],
                "iconName": "flag-checkered",
                "prefix": "fas",
              }
            }
            inverse={false}
            listItem={false}
            mask={null}
            pull={null}
            pulse={false}
            rotation={null}
            size={null}
            spin={false}
            symbol={false}
            title=""
            transform={null}
          />
        </Icon>
      </Button>
    </div>
  </MediaItem>
  <MediaItem
    className=""
    position="center"
    renderAs="div"
    style={Object {}}
  >
    <Content
      renderAs="div"
      size={null}
      style={Object {}}
    >
      <p
        className="sub-description"
      >
        <strong
          className="sub-title"
        >
          [
          1
          ] 
        </strong>
      </p>
      <Level
        breakpoint={null}
        className=""
        renderAs="div"
        style={Object {}}
      >
        <LevelSide
          align="left"
          className="tags"
          renderAs="div"
          style={Object {}}
        >
          <LevelItem
            className=""
            renderAs="div"
            style={Object {}}
          >
            <TagGroup
              className="tag-due tag-icon"
              gapless={true}
              style={Object {}}
            >
              <Tag
                className=""
                color="dark"
                remove={false}
                renderAs="span"
                rounded={false}
                size={null}
                style={Object {}}
              >
                <Icon
                  align={null}
                  className="is-small"
                  color={null}
                  icon={null}
                  size={null}
                  style={Object {}}
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon={
                      Object {
                        "icon": Array [
                          512,
                          512,
                          Array [],
                          "f017",
                          "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm57.1 350.1L224.9 294c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h48c6.6 0 12 5.4 12 12v137.7l63.5 46.2c5.4 3.9 6.5 11.4 2.6 16.8l-28.2 38.8c-3.9 5.3-11.4 6.5-16.8 2.6z",
                        ],
                        "iconName": "clock",
                        "prefix": "fas",
                      }
                    }
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title=""
                    transform={null}
                  />
                </Icon>
              </Tag>
              <Tag
                className="overdue"
                color={null}
                remove={false}
                renderAs="span"
                rounded={false}
                size={null}
                style={Object {}}
              >
                a few seconds ago
              </Tag>
            </TagGroup>
          </LevelItem>
          <LevelItem
            className=""
            renderAs="div"
            style={Object {}}
          >
            <TagGroup
              className="tag-project tag-icon"
              gapless={true}
              onClick={[Function]}
              style={Object {}}
            >
              <Tag
                className=""
                color="dark"
                remove={false}
                renderAs="span"
                rounded={false}
                size={null}
                style={Object {}}
              >
                <Icon
                  align={null}
                  className="is-small"
                  color={null}
                  icon={null}
                  size={null}
                  style={Object {}}
                >
                  <FontAwesomeIcon
                    border={false}
                    className=""
                    fixedWidth={false}
                    flip={null}
                    icon={
                      Object {
                        "icon": Array [
                          512,
                          512,
                          Array [],
                          "f07b",
                          "M464 128H272l-64-64H48C21.49 64 0 85.49 0 112v288c0 26.51 21.49 48 48 48h416c26.51 0 48-21.49 48-48V176c0-26.51-21.49-48-48-48z",
                        ],
                        "iconName": "folder",
                        "prefix": "fas",
                      }
                    }
                    inverse={false}
                    listItem={false}
                    mask={null}
                    pull={null}
                    pulse={false}
                    rotation={null}
                    size={null}
                    spin={false}
                    symbol={false}
                    title=""
                    transform={null}
                  />
                </Icon>
              </Tag>
              <Tag
                className=""
                color="info"
                remove={false}
                renderAs="span"
                rounded={false}
                size={null}
                style={Object {}}
              >
                spartaaa
              </Tag>
            </TagGroup>
          </LevelItem>
          <LevelItem
            className=""
            renderAs="div"
            style={Object {}}
          >
            <Connect(Component)
              handleClick={[MockFunction]}
              taskFilter={
                TaskFilter {
                  "dueUntil": null,
                  "priority": null,
                  "project": null,
                  "searchTerm": null,
                  "status": null,
                  "tags": Array [],
                }
              }
              uuid="ABC"
            />
          </LevelItem>
        </LevelSide>
      </Level>
      <Level
        breakpoint={null}
        className="aux-bar-1"
        renderAs="div"
        style={Object {}}
      >
        <LevelSide
          align="left"
          className=""
          renderAs="div"
          style={Object {}}
        >
          <Connect(Component)
            uuid="ABC"
          />
        </LevelSide>
      </Level>
    </Content>
    <Level
      breakpoint="mobile"
      className=""
      renderAs="div"
      style={Object {}}
    >
      <LevelSide
        align="left"
        className=""
        renderAs="div"
        style={Object {}}
      />
    </Level>
  </MediaItem>
  <MediaItem
    className=""
    position="right"
    renderAs="div"
    style={Object {}}
  >
    <Content
      renderAs="div"
      size={null}
      style={Object {}}
    >
      <small />
    </Content>
  </MediaItem>
</Media>
`;
